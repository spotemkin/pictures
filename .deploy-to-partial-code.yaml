DOCKERHUB REMOTE PUBLICATION:


      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          # registry: ghcr.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate Docker tags
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: sergeypotemkin/pictures
          tags: |
            latest
            type=sha

      - name: Build and push pic-main
        env:
          ALBUM_LIST_PATH: ${{ vars.ALBUM_LIST_PATH }}
          PIC_CLIENT_PORT: ${{ vars.PIC_CLIENT_PORT }}
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            ALBUM_LIST_PATH=${{ vars.ALBUM_LIST_PATH }}
            PIC_CLIENT_PORT=${{ vars.PIC_CLIENT_PORT }}
          push: true
          # tags: spotemkin/pictures:pic-main
          # labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          no-cache: true

      - name: Build and push pic-client
        uses: docker/build-push-action@v3.2.0
        with:
          context: ./public
          file: ./public/Dockerfile
          push: true
          # tags: spotemkin/pictures:pic-client
          # labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          no-cache: true

END

nginx copy


      - name: Copy public folder to server
        env:
          ALBUM_LIST_PATH: ${{ vars.ALBUM_LIST_PATH }}
          PIC_CLIENT_PORT: ${{ vars.PIC_CLIENT_PORT }}
        uses: appleboy/scp-action@master
        with:
          host: ${{ vars.MAIN_DOMAIN }}
          port: ${{ vars.SSH_PORT }}
          username: ${{ vars.SSH_USER }}
          key: ${{ secrets.DEV_SERVER_KEY }}
          source: "public/*"
          target: /data/pics/sys/nginx-data/
          overwrite: true
          debug: true


END
