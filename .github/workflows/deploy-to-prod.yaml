name: Deploy PIC to PROD

on:
  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-22.04
    environment:
      name: prod

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: List files
        run: ls -l

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            latest
            type=sha

      - name: Build and push pic-main
        uses: docker/build-push-action@v5
        env:
          EMAIL: ${{ vars.EMAIL }}
          PIC_DOMAIN: ${{ vars.PIC_DOMAIN }}
          MAIN_DOMAIN: ${{ vars.MAIN_DOMAIN }}
          MAIN_HOST: ${{ vars.MAIN_HOST }}
          ALBUM_LIST_PATH: ${{ vars.ALBUM_LIST_PATH }}
          PIC_SERVER_PORT: ${{ vars.PIC_SERVER_PORT }}
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          build-args: |
            EMAIL=${{ vars.EMAIL }}
            PIC_DOMAIN=${{ vars.PIC_DOMAIN }}
            MAIN_DOMAIN=${{ vars.MAIN_DOMAIN }}
            MAIN_HOST=${{ vars.MAIN_HOST }}
            ALBUM_LIST_PATH=${{ vars.ALBUM_LIST_PATH }}
            PIC_SERVER_PORT=${{ vars.PIC_SERVER_PORT }}
          no-cache: true

      - name: Copy Docker and docker-compose files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ vars.MAIN_HOST }}
          port: ${{ vars.SSH_PORT }}
          username: ${{ vars.SSH_USER }}
          key: ${{ secrets.DEV_SERVER_KEY }}
          source: "Dockerfile, server.js, package.json, package-lock.json, docker-compose-prod.yaml, public/, views/"
          target: /srv/pic-project/
          overwrite: true
          debug: true

      - name: Docker compose up
        uses: appleboy/ssh-action@master
        with:

          script: |
            cd /srv/pic-project/
            # docker stop pic_main
            # docker rm pic_main
            # docker system prune -f
            export EMAIL=${{ vars.EMAIL }}
            export PIC_DOMAIN=${{ vars.PIC_DOMAIN }}
            export MAIN_DOMAIN=${{ vars.MAIN_DOMAIN }}
            export MAIN_HOST=${{ vars.MAIN_HOST }}
            export ALBUM_LIST_PATH=${{ vars.ALBUM_LIST_PATH }}
            export PIC_SERVER_PORT=${{ vars.PIC_SERVER_PORT }}
            docker-compose -f docker-compose-prod.yaml pull
            docker-compose -f docker-compose-prod.yaml down
            docker-compose -f docker-compose-prod.yaml up --build -d
          host: ${{ vars.MAIN_HOST }}
          port: ${{ vars.SSH_PORT }}
          username: ${{ vars.SSH_USER }}
          key: ${{ secrets.DEV_SERVER_KEY }}

      - name: Debug Environment Variables
        run: |
          printenv